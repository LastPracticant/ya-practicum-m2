name: CI
env:
    DEPLOY_IMAGE_NAME: "cr.yandex/crpasb6c8g98nppq2f2v/lp-app:v-${{ github.sha }}"
    YC_PATH: "/opt/yandex-cloud/bin/yc"

on:
  push:
    branches: [ LP-130 ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: | 
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yandex-cloud -n
          ${YC_PATH} config set token ${{secrets.YC_OAUTH_TOKEN}}
          ${YC_PATH} config profile create batia
          ${YC_PATH} config set folder-id b1gb6olmron2khu1fqf4
          ${YC_PATH} config set cloud-id b1g1k4hfma98vqpph1mh
          docker login --username oauth --password ${{secrets.YC_OAUTH_TOKEN}} cr.yandex
          docker build -t ${DEPLOY_IMAGE_NAME} .
          docker push ${DEPLOY_IMAGE_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DEPLOY_HOST}}
          username: ${{secrets.USER_NAME}}
          key: ${{secrets.SSH_KEY}}
          script: |
            whoami
            docker run hello-world
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi $(docker images -q)
            echo "${{DEPLOY_IMAGE_NAME}}"
            docker pull ${DEPLOY_IMAGE_NAME}
            docker run -p 8066:5000 -d --name lp-app -e POSTGRES_USERNAME=${{secrets.POSTGRES_USERNAME}} -e POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} -e POSTGRES_DATABASE=${{secrets.POSTGRES_DATABASE}} ${DEPLOY_IMAGE_NAME}

